{"version":3,"sources":["components/ShowAllλs/index.tsx","components/Label/index.tsx","components/βReduction/index.tsx","components/IDENTITY/index.tsx","components/logic/TRUE/index.tsx","components/logic/FALSE/index.tsx","components/logic/AND/index.tsx","components/logic/OR/index.tsx","components/logic/IF_THEN_ELSE/index.tsx","components/ShowAllλsButton/index.tsx","components/CodeBlock/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ShowλContext","React","createContext","showAll","setShowAll","ShowAllλs","children","useState","Provider","value","expressions","IDENTITY","TRUE","FALSE","AND","OR","IF_THEN_ELSE","Label","name","showλ","setShowλ","useContext","className","onClick","onKeyPress","event","key","tabIndex","βReduction","λ","application","args","reduce","accumulator","current","displayName","x","y","p","q","a","b","ShowAllλsButton","CodeBlock","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.392914d6.chunk.js","sourcesContent":["import React, { useState, FC, ReactNode } from \"react\";\n\ntype Showλs = {\n  showAll: boolean;\n  setShowAll: ((val: boolean) => void) | null;\n};\n\nexport const ShowλContext = React.createContext<Showλs>({\n  showAll: false,\n  setShowAll: null,\n});\n\ninterface ShowAllλsProps {\n  children: ReactNode;\n}\n\nconst ShowAllλs: FC<ShowAllλsProps> = ({ children }) => {\n  const [showAll, setShowAll] = useState(false);\n\n  return (\n    <ShowλContext.Provider value={{ showAll, setShowAll }}>\n      {children}\n    </ShowλContext.Provider>\n  );\n};\n\nexport default ShowAllλs;\n","import React, { FC, useState, useContext, KeyboardEvent } from \"react\";\nimport { ShowλContext } from \"../ShowAllλs\";\nimport \"./Label.css\";\n\ninterface LabelProps {\n  name: string;\n}\n\nconst expressions: any = {\n  IDENTITY: \"λx.x\",\n  TRUE: \"λx.λy.x\",\n  FALSE: \"λx.λy.y\",\n  AND: \"λp.λq.p q p\",\n  OR: \"λp.λq.p p q\",\n  IF_THEN_ELSE: \"λp.λa.λb.p a b\",\n};\n\nconst Label: FC<LabelProps> = ({ name }) => {\n  const [showλ, setShowλ] = useState(false);\n  const { showAll } = useContext(ShowλContext);\n\n  const handleClick = () => !showAll && setShowλ(!showλ);\n\n  const handleKeyPress = (event: KeyboardEvent) =>\n    (event.key === \"Enter\" || event.key === \" \") &&\n    !showAll &&\n    setShowλ(!showλ);\n\n  return (\n    <span\n      className=\"label\"\n      onClick={handleClick}\n      onKeyPress={handleKeyPress}\n      tabIndex={0}\n    >\n      {showλ || showAll ? expressions[name] : name}\n    </span>\n  );\n};\n\nexport default Label;\n","import React, { FC } from \"react\";\nimport Label from \"../Label\";\nimport { LambdaTerm, Abstraction } from \"../../types\";\n\ninterface βReductionProps {\n  λ: Abstraction;\n  args: LambdaTerm[];\n}\n\nconst βReduction: FC<βReductionProps> = ({ λ, args }) => {\n  const application = args.reduce(\n    (accumulator: any, current: LambdaTerm) => accumulator(current),\n    λ\n  );\n\n  return typeof application === \"function\" ? (\n    <Label name={application.displayName} />\n  ) : (\n    application\n  );\n};\n\nexport default βReduction;\n","import React, { FC } from \"react\";\nimport βReduction from \"../βReduction\";\nimport { LambdaTerm } from \"../../types\";\n\ninterface IDENTITYProps {\n  args: LambdaTerm[];\n}\n\nconst IDENTITY: FC<IDENTITYProps> = args => <βReduction λ={x => x} {...args} />;\n\nIDENTITY.displayName = \"IDENTITY\";\n\nexport default IDENTITY;\n","import React, { FC } from \"react\";\nimport βReduction from \"../../βReduction\";\nimport { LambdaTerm } from \"../../../types\";\n\ninterface TRUEProps {\n  args: LambdaTerm[];\n}\n\nconst TRUE: FC<TRUEProps> = args => <βReduction λ={x => y => x} {...args} />;\n\nTRUE.displayName = \"TRUE\";\n\nexport default TRUE;\n","import React, { FC } from \"react\";\nimport βReduction from \"../../βReduction\";\nimport { LambdaTerm } from \"../../../types\";\n\ninterface FALSEProps {\n  args: LambdaTerm[];\n}\n\nconst FALSE: FC<FALSEProps> = args => <βReduction λ={x => y => y} {...args} />;\n\nFALSE.displayName = \"FALSE\";\n\nexport default FALSE;\n","import React, { FC } from \"react\";\nimport βReduction from \"../../βReduction\";\nimport { LambdaTerm } from \"../../../types\";\n\ninterface ANDProps {\n  args: LambdaTerm[];\n}\n\nconst AND: FC<ANDProps> = args => (\n  <βReduction λ={(p: any) => q => p({ args: [q, p] })} {...args} />\n);\n\nAND.displayName = \"AND\";\n\nexport default AND;\n","import React, { FC } from \"react\";\nimport βReduction from \"../../βReduction\";\nimport { LambdaTerm } from \"../../../types\";\n\ninterface ORProps {\n  args: LambdaTerm[];\n}\n\nconst OR: FC<ORProps> = args => (\n  <βReduction λ={(p: any) => q => p({ args: [p, q] })} {...args} />\n);\n\nOR.displayName = \"OR\";\n\nexport default OR;\n","import React, { FC } from \"react\";\nimport βReduction from \"../../βReduction\";\nimport { LambdaTerm } from \"../../../types\";\n\ninterface IF_THEN_ELSEProps {\n  args: LambdaTerm[];\n}\n\nconst IF_THEN_ELSE: FC<IF_THEN_ELSEProps> = args => (\n  <βReduction λ={(p: any) => a => b => p({ args: [a, b] })} {...args} />\n);\n\nIF_THEN_ELSE.displayName = \"IF_THEN_ELSE\";\n\nexport default IF_THEN_ELSE;\n","import React, { FC, useContext } from \"react\";\nimport { ShowλContext } from \"../ShowAllλs\";\nimport \"./ShowAllλsButton.css\";\n\ninterface ShowAllλsButtonProps {}\n\nconst ShowAllλsButton: FC<ShowAllλsButtonProps> = () => {\n  const { showAll, setShowAll } = useContext(ShowλContext);\n\n  const handleClick = () => setShowAll && setShowAll(!showAll);\n\n  return (\n    <button className=\"button\" onClick={handleClick}>\n      {showAll ? \"Hide λs\" : \"Show all λs\"}{\" \"}\n    </button>\n  );\n};\n\nexport default ShowAllλsButton;\n","import React, { FC, ReactNode } from \"react\";\n\ninterface CodeBlockProps {\n  children?: ReactNode;\n}\n\nconst CodeBlock: FC<CodeBlockProps> = ({ children }) => (\n  <pre>\n    <code>{children}</code>\n  </pre>\n);\n\nexport default CodeBlock;\n","import React, { FC } from \"react\";\nimport IDENTITY from \"./components/IDENTITY\";\nimport TRUE from \"./components/logic/TRUE\";\nimport FALSE from \"./components/logic/FALSE\";\nimport AND from \"./components/logic/AND\";\nimport OR from \"./components/logic/OR\";\nimport IF_THEN_ELSE from \"./components/logic/IF_THEN_ELSE\";\nimport ShowAllλsButton from \"./components/ShowAllλsButton\";\nimport ShowAllλs from \"./components/ShowAllλs\";\nimport CodeBlock from \"./components/CodeBlock\";\nimport Label from \"./components/Label\";\nimport \"./App.css\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">Lambda Calculus in React</header>\n      <main>\n        <ShowAllλs>\n          <ShowAllλsButton />\n          <CodeBlock>\n            <Label name=\"IDENTITY\" /> (1): <IDENTITY args={[1]} />\n          </CodeBlock>\n          <CodeBlock>\n            <Label name=\"IDENTITY\" /> (<Label name=\"IDENTITY\" />\n            ): <IDENTITY args={[IDENTITY]} />\n          </CodeBlock>\n          <CodeBlock>\n            <Label name=\"TRUE\" /> (a b): <TRUE args={[\"a\", \"b\"]} />\n          </CodeBlock>\n          <CodeBlock>\n            <Label name=\"FALSE\" /> (a b): <FALSE args={[\"a\", \"b\"]} />\n          </CodeBlock>\n          <CodeBlock>\n            <Label name=\"IDENTITY\" /> (<Label name=\"TRUE\" /> (a b)):{\" \"}\n            <IDENTITY args={[<TRUE args={[\"a\", \"b\"]} />]} />\n          </CodeBlock>\n          <CodeBlock>\n            <Label name=\"TRUE\" /> (<Label name=\"TRUE\" /> (b)):{\" \"}\n            <TRUE args={[TRUE, \"b\"]} />\n          </CodeBlock>\n          <CodeBlock>\n            <Label name=\"AND\" /> (<Label name=\"TRUE\" /> <Label name=\"FALSE\" />\n            ): <AND args={[TRUE, FALSE]} />\n          </CodeBlock>\n          <CodeBlock>\n            <Label name=\"AND\" /> (<Label name=\"TRUE\" /> <Label name=\"TRUE\" />\n            ): <AND args={[TRUE, TRUE]} />\n          </CodeBlock>\n          <CodeBlock>\n            <Label name=\"AND\" /> (<Label name=\"FALSE\" /> <Label name=\"FALSE\" />\n            ): <AND args={[FALSE, FALSE]} />\n          </CodeBlock>\n          <CodeBlock>\n            <Label name=\"AND\" /> (<Label name=\"FALSE\" /> <Label name=\"TRUE\" />\n            ): <AND args={[FALSE, TRUE]} />\n          </CodeBlock>\n          <CodeBlock>\n            <Label name=\"OR\" /> (<Label name=\"TRUE\" /> <Label name=\"FALSE\" />\n            ): <OR args={[TRUE, FALSE]} />\n          </CodeBlock>\n          <CodeBlock>\n            <Label name=\"OR\" /> (<Label name=\"TRUE\" /> <Label name=\"TRUE\" />\n            ): <OR args={[TRUE, TRUE]} />\n          </CodeBlock>\n          <CodeBlock>\n            <Label name=\"OR\" /> (<Label name=\"FALSE\" /> <Label name=\"FALSE\" />\n            ): <OR args={[FALSE, FALSE]} />\n          </CodeBlock>\n          <CodeBlock>\n            <Label name=\"OR\" /> (<Label name=\"FALSE\" /> <Label name=\"TRUE\" />\n            ): <OR args={[FALSE, TRUE]} />\n          </CodeBlock>\n          <CodeBlock>\n            <Label name=\"IF_THEN_ELSE\" /> (<Label name=\"TRUE\" /> (c d)):{\" \"}\n            <IF_THEN_ELSE args={[TRUE, \"c\", \"d\"]} />\n          </CodeBlock>\n          <CodeBlock>\n            <Label name=\"IF_THEN_ELSE\" /> (<Label name=\"FALSE\" /> (c d)):{\" \"}\n            <IF_THEN_ELSE args={[FALSE, \"c\", \"d\"]} />\n          </CodeBlock>\n        </ShowAllλs>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}